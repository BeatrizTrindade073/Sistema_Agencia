import java.util.Scanner;
import java.util.ArrayList;
class Agencia{
    // declaração de variáveis //
    String cnpj;
    String nome;
    private static String senha;
   private static int porganho1=45;
  // métodos de acesso para variável privada //
    public int getPorganho1()
    {return this.porganho1;}
    public void setPorganho1(int p1)
    {this.porganho1=p1;}
    public String getSenha()
    {return this.senha;}
    public void setSenha(String s1)
    {this.senha=s1;}
    
    // método construtor da classe Agencia //
    public Agencia(String cnpj, String nome, int porganho1, String senha)
    {
        this.cnpj=cnpj;
        this.nome=nome;
        this.porganho1=porganho1;
        this.senha=senha;
    }
    
    
}
class Pessoa{ 
    String nome;
int idade;
String telefone;
int codigo;
     // método construtor da classe Pessoa //
      public Pessoa ()
    {
        
    }
}
// classe Funcionario herda a classe Pessoa
class Funcionario extends Pessoa{ 
    String cargo;
    float salario;
     // método construtor da classe Funcionario 
     public Funcionario()
    {
        
    }
    
    }
// criação de classe 
// classe Equipe herda a classe Funcionario
class Equipe extends Funcionario{
// declaração de atributos

String coordenador;
String fotografo;
String estilista;
String editor;
int disponivel;
// método construtor da classe Equipe 
 public Equipe()
    {
    }
    
}

//IMPLEMENTAÇÃO DA ASSOCIAÇÃO
  //confirma se a equipe esta disponivel
class Confirmacao{
 Equipe eq;
int dis;
 public void disponivel(int dis){
  if(dis==1){
    int disponibilidade=1;}
    else {
     int disponibilidade=0;
    }
}
     
 public static void disponivel() {
     System.out.println("Equipe indisponivel");
 }

}

// criação de classe 
// classe Modelo herda os atributos da classe Pessoa
class Modelo extends Pessoa{
    // declaração de atributos 
    int corolhos;
    float altura;
    float peso;
    int trabalho_ativo;
    private static int porganho2=35;
    String r1;
    String r2;
    // método construtor da classe Modelo
     public Modelo()
    {
        
    }
     // métodos de acesso para o atributo privado 
     public int getPorganho2()
    {return this.porganho2;}
    public void setPorganho2(int p2)
    {this.porganho2=p2;}
    // método que recebe a resposta do usuário em relação ao(a) modelo ter algum trabalho em andamento
public void Ativo(int resp)
{if(resp==1){
    trabalho_ativo=1;}
    else {
        trabalho_ativo=0;
    }
}
// sobrecarga do método Ativo, exibe a mensagem que o(a) possui algum trabalho em andamento 
   public static void Ativo()
    {
        {System.out.printf("Há trabalho ativo");
       
           
        }
    }
     
}
// criação de classe 
class Projeto{
// declaração de atributos 
    String model;
    int codmodel;
    int codequipe;
    int codprojeto;
    // método construtor da classe Projeto
     public Projeto()
    {
      
    }
}
// criação de classe 
class Empresa{
  // declaração de métodos 
     String nomeemp;
    String projeto;
    private float cache;
    // método construtor da classe Empresa
     public Empresa()
    {
        
    }
    // métodos de acesso para atributo privado 
    public float getCache()
    {return this.cache;}
    public void setCache(float c)
    {this.cache=c;}
    // método que recebe a porcentagem de ganho da modelo e o cache oferecido pela empresa contratante, calcula o valor a ser pago a modelo de acordo com o mesmo e retorna o valor que será direcionado à agência 
     public static float Valor(float porganho, float cache)
    {
        float pagmodel, pagagencia;
        pagmodel=cache*(porganho/100);
        System.out.printf("O valor pago a modelo será de R$ %.2f", pagmodel);
        pagagencia= cache - pagmodel;
        return pagagencia;
        
       
    }
    
}

//IMPLEMENTAÇÃO DA AGREGAÇÃO
class RepresentantesModelo{
    Modelo repre1;
    Modelo repre2;
String rep1 = repre1.r1;
String rep2 = repre2.r2;
int indice;
    public RepresentantesModelo(String rep2){
       this.rep2=rep2;
    }
    public RepresentantesModelo(int indice, String rep1)
    {   this.indice=indice;
        this.rep1=rep1;
    }
    public void Representantes(){
        System.out.println("Os representantes da modelo de código" + this.indice + "sao" +this.rep1+ "e" +this.rep2);
    }

}




    public class Main { static Scanner ent= new Scanner(System.in);
    // método que exibi o Menu e retorna a opção escolhida pelo usuário //
    public static int Menu()
    {  int op =0;
    System.out.printf("\n Selecione a opção desejada \n");
    System.out.printf("\n 1 --> Consultar informações da agência \n ");
    System.out.printf("\n 2 --> Cadastrar modelos \n ");
    System.out.printf("\n 3 --> Cadastrar funcionários \n");
    System.out.printf("\n 4 --> Montar equipes \n");
    System.out.printf("\n 5 --> Cadastrar projetos \n");
    System.out.printf("\n 6 --> Consultar projetos \n");
    System.out.printf("\n 7 --> Consultar modelos \n");
    System.out.printf("\n 8 --> Lista de todos os funcionários \n");
    System.out.printf("\n -->  \n");
    op = ent.nextInt();
    return op;
  
        
    }
    // Criação de ArrayList que apresentará a lista de funcionários
    static ArrayList<String> fun = new ArrayList();
  

  
    public static void main(String args[]) {
    int r;
   int size=0;
    // declaração de variável do tipo Agencia //
    Agencia a = new Agencia("128.538.554/5555-02", "Charlotte", 45, "agencia123") ;
    // Criação de vetores de classe e utilização de estrutura de repetição para declarar cada posição //

      
Confirmacao[] c=new Confirmacao[20];
   for(r=0;r<20;r++)
   {
       c[r]=new Confirmacao();
   }
  
   Funcionario[] f=new Funcionario[50];
   for(r=0;r<50;r++)
   {
       f[r]=new Funcionario();
   }
   Modelo[] m=new Modelo[100];
   for(r=0;r<100;r++){
   m[r]= new Modelo();
   }
   RepresentantesModelo[] rm = new RepresentantesModelo[100];
 
 
 
   Empresa[]e= new Empresa[100];
   for(r=0;r<100;r++){
    e[r]=new Empresa();
   }
   Equipe[] eq= new Equipe[50];
   for(r=0;r<50;r++){
    eq[r]=new Equipe();
   }
    Projeto[] p= new Projeto[100];
   for(r=0;r<100;r++){
    p[r]=new Projeto();
   }
   // declaração de variáveis 
    int i, resp= 1, t;
    int opc = 0;
    int x=1;
    int tam=0;
  
    opc=Menu();
    // utilização de estrutura de repetição com a condição de que a variável "resp", declarada acima recebendo o valor 1, continue tendo esse valor, caso o usuário na oportunidade de escolher entre 0 e 1, escolha 0, o programa fechará 
    while(resp!=0){
// caso a opção escolhida no Menu seja 1 , o programa exibirá as informações sobre a agência:
    if(opc==1){int p1;
// utilização do método de acesso para acessar a porcentagem de ganho da agência
p1=a.getPorganho1();
String s1;
s1=a.getSenha();
String senha;
String buffer1;
System.out.printf("\n \t INFORMAÇÕES RESTRITAS \t \n");
System.out.printf("\n Digite a senha \n ");
buffer1= ent.nextLine();
System.out.printf("\n Senha:  ");
senha=ent.nextLine();
// comparação entre a senha registrada e a senha digitada
int result = senha.compareTo(s1);
if(result==0)
{
    


System.out.printf("=====================================================");
    System.out.printf("\n CNPJ da agencia: %s \n", a.cnpj);
    System.out.printf("\n Nome da agencia: %s \n", a.nome);
    System.out.printf("\n Porcentagem de ganho: %d \n", p1);
    System.out.printf("=====================================================");}
    else {
        System.out.printf("\n \t ACESSO NEGADO \t \n");
    }
       System.out.printf("\n Deseja realizar outra operação? 1 para Sim, 0 para Não: \n ");
         resp=ent.nextInt();
    // caso o usuário digite 1, o Menu será novamente exibido
         if(resp==1)
         {opc=Menu();}
    }
    // caso a opção escolhida no Menu seja 2, o programa permitirá o cadastro:
    if(opc==2)
       {i=0;
      int j=0;
     // Enquanto o usuário não escolher 0 para a parada de cadastro, o cadastro se repetirá para a adição de novos modelos
    while (x!=0){
System.out.printf("=====================================================");
           System.out.printf("\n Informe o nome da modelo: ");
        // impedindo que o usuário não consiga digitar o nome da modelo devido à sujeira do buffer
        if (ent.hasNextLine()) {
            m[i].nome = ent.nextLine();
        } else {
            System.out.println("Digite novamente");
            System.out.println();
        }
        m[i].nome= ent.nextLine();
        System.out.printf("\n Informe o código da modelo: ");
         m[i].codigo= ent.nextInt();
        System.out.printf("\n Informe a idade da modelo: ");
         m[i].idade= ent.nextInt();
         System.out.printf("\n Informe a altura da modelo: ");
         m[i].altura= ent.nextFloat();
         System.out.printf("\n Informe o peso da modelo: ");
         m[i].peso= ent.nextFloat();
         System.out.printf("\n Informe entre as opções abaixo, a cor dos olhos da modelo: ");
        System.out.printf("\n 1 --> Castanho");
        System.out.printf("\n 2 --> Verde");
        System.out.printf("\n 3 --> Azul");
        System.out.printf("\n 4 --> Preto");
        System.out.printf("\n --> ");
         m[i].corolhos= ent.nextInt();
       

String n1;
System.out.printf("\n Insira o representante do(a) modelo oriundo da própria agência: ");
n1 = ent.nextLine();



        System.out.printf("\n Está trabalhando em algum projeto? 1 para Sim, 0 para Não: \n ");
         t= ent.nextInt();
         // o método Ativo receberá o valor respondido na questão acima
      m[i].Ativo(t);
      // a posição do vetor mudará a cada cadastro
      i++;
      System.out.printf("=====================================================");
// caso a resposta seja 0, o cadastro fechará
System.out.printf("\n Deseja cadastrar outra modelo? 1 para Sim, 0 para Não: \n");
      x= ent.nextInt();}
    
       System.out.printf("\n Deseja realizar outra operação? 1 para Sim, 0 para Não: \n ");
         resp=ent.nextInt();
         // caso a resposta seja 0, o programa fechará
         if(resp==1)
         {opc=Menu();}
     
        
       } 
      // caso a opção escolhida seja 7, o programa exibirá as informações da modelo de acordo com o código informado
      if(opc==7)
      {int o,z;
      System.out.printf("=====================================================");
          System.out.printf("\n Informe o código da modelo: ");
          o=ent.nextInt();
          // utilização de estrutura de repetição para encontrar a modelo com o código informado
          for(z=0;z<100;z++)
          {if(m[z].codigo==o)
            {
          System.out.printf("=====================================================");
         System.out.printf("\n Nome: %s \n", m[z].nome);
         System.out.printf("\n Código %s \n", m[z].codigo);
         System.out.printf("\n Idade: %d \n", m[z].idade);
         System.out.printf("\n Altura: %.2f \n", m[z].altura);
         System.out.printf("\n Peso: %.2f \n", m[z].peso);
         
        
         
                  if (m[z].trabalho_ativo==1){
                      m[z].Ativo();
            }
              System.out.printf("=====================================================");
            }
          
              
          }
         System.out.printf("\n Deseja realizar outra operação? 1 para Sim, 0 para Não \n ");
         resp=ent.nextInt();
         if(resp==1)
         {opc=Menu();}
       }  
       //declaração de variável para a chamada de método
       float cachepublic=0;
       // caso a opção escolhida seja 5, o cadastro de empresas será aberto
        if(opc==5)  
     { 
     i=0;
         x=1;
         //enquanto o usuário não escolher 0 para parar o cadastramento, esse continuará
         while(x!=0){
             System.out.printf("=====================================================");
         System.out.printf("\n Informe o nome da empresa: ");
        if (ent.hasNextLine()) {
            e[i].nomeemp =ent.nextLine();
        } else {
            System.out.println("Digite novamente");
            System.out.println();
        }
        e[i].nomeemp= ent.nextLine();
        System.out.printf("\n Informe o Projeto: ");
         e[i].projeto= ent.nextLine();
        float ca;
        System.out.printf("\n Informe o cachê: ");
         ca= ent.nextFloat();
        // chamada do método para acessar a variável cache
         e[i].setCache(ca);
         // utilização de método de acesso para receber o valor armazenado na variável privada
         cachepublic=e[i].getCache();
         
         i++;
         
          int y, j, id;
          float h, k;
          System.out.printf("\n Informe o código do projeto: ");
          p[i].codprojeto= ent.nextInt();
          System.out.printf("=====================================================");
          System.out.printf("\n Selecione a idade desejada:");
          id=ent.nextInt();
         System.out.printf("\n Selecione a cor dos olhos desejada:");
          System.out.printf("\n 1 --> Castanho");
        System.out.printf("\n 2 --> Verde");
        System.out.printf("\n 3 --> Azul");
        System.out.printf("\n 4 --> Preto");
         y=ent.nextInt();
         System.out.printf("\n Selecione a altura desejada:");
         h=ent.nextFloat();
         System.out.printf("\n Selecione o peso desejado:");
        k=ent.nextFloat();
        char modeladeq='a';
        System.out.printf("=====================================================");
        // utilização de estruturas de repetição e  condicional para encontrar a modelo com as características selecionadas
         for(j=0;j<100;j++)
          {
          if(m[j].idade==id){
             if (m[j].corolhos==y)
             {
           if(m[j].altura==h){
               if(m[j].peso==k){
                   System.out.printf("\n A modelo mais adequada é %s \n", m[j].nome);
             
                 modeladeq= 't';
                 p[i].model=m[j].nome;
                 p[i].codmodel=m[j].codigo;
                System.out.printf("\n O código do projeto é %d \n", p[i].codprojeto);
                if(modeladeq!='t'){
                 System.out.printf("\n Não há modelos disponíveis \n");
             }// caso a modelo seja encontrada, um novo projeto será criado
             System.out.printf("=====================================================");
             for(j=0;j<tam;j++){
                 System.out.printf("\n Equipe %s \n", j);
                 System.out.printf("\n Coordenador(a): %s \n", eq[j].coordenador);
                 System.out.printf("\n Fotográfo(a): %s \n", eq[j].fotografo);
                  System.out.printf("\n Estilista: %s \n", eq[j].estilista);
                   System.out.printf("\n Editor(a): %s \n", eq[j].editor);
           }
                   System.out.printf("=====================================================");
  
             
             System.out.printf("\n Digite o número da equipe escolhida:");
             p[i].codequipe=ent.nextInt();
             int cd= p[i].codequipe;
             // caso a equipe já esteja cadastrada em outro projeto, esta estará indisponível
             for(j=0;j<tam;j++){
                 if(eq[j].codigo==p[i].codequipe)
                 { if (eq[j].disponivel==1){
                     c[j].disponivel();
                     }
                     else{
                          eq[j].disponivel=1;
                     }
                
                 
                 }
             }
         
             System.out.printf("=====================================================");
             
             }}
               }
           }
          }
             
    
 System.out.printf("Deseja cadastrar outra empresa? 1 para Sim, 0 para Não: \n");
      x= ent.nextInt();
}
         
// criação de métodos para receber o valor retornado pelo método
int p2;
float vagencia;   
p2=m[i].getPorganho2();
    // a função receberá a porcentagem de ganho da modelo e o cachê oferecido pela empresa contratante
    vagencia = e[i].Valor(p2,cachepublic);
    System.out.printf("=====================================================");
    System.out.printf(" \n O valor recebido pela agência será de:R$ %.2f", vagencia);
    System.out.printf("=====================================================");
 System.out.printf("\n Deseja realizar outra operação? 1 para Sim, 0 para Não: \n");
         resp=ent.nextInt();
         if(resp==1)
         {opc=Menu();}
    
}    
// caso a opção escolhida seja 3, o cadastro de funcionários será aberto
      if(opc==3)  
     { System.out.printf("=====================================================");
         System.out.printf("\n Quantos funcionários deseja cadastrar? ");
    
    int qt=ent.nextInt();
      String buffer;
     for(i=0;i<qt;i++)
     {  
         System.out.printf("\n Digite o código do funcionário: \n");
     f[i].codigo=ent.nextInt();
      
      System.out.printf("... ");
      buffer= ent.nextLine();
      
      System.out.printf("\n Digite o nome do(a) funcionário: \n ");
        f[f[i].codigo].nome= ent.nextLine();
       
         
        System.out.printf("\n Digite a idade do funcionário: \n");
            f[f[i].codigo].idade= ent.nextInt();
        
       System.out.printf("... ");
       buffer= ent.nextLine();
     System.out.printf(" \n Digite o cargo do(a) funcionário: \n");
    f[f[i].codigo].cargo= ent.nextLine();
       System.out.printf("=====================================================");
       fun.add(f[f[i].codigo].nome);
size++;
     }
     int cod=0;
     // teste para garantir que o registro foi feito
     System.out.printf("=====================================================");
     System.out.printf("\n Informe o código do funcionário desejado: \n ");
     cod=ent.nextInt();
     System.out.printf("Nome: %s \n", f[cod].nome);
     System.out.printf("Cargo: %s \n", f[cod].cargo);
     System.out.printf("Idade: %d \n", f[cod].idade);
     System.out.printf("=====================================================");
      System.out.printf("\n Deseja realizar outra operação? 1 para Sim, 0 para Não: \n");
         resp=ent.nextInt();
         if(resp==1)
         {opc=Menu();}
    
     }
     if(opc==4){
        i=0;
         x=1;
         while(x!=0){
                  // funcionários já cadastrados passam a compor uma equipe por meio de seus códigos
             System.out.printf("=====================================================");
         System.out.printf("\n Informe o código do coordenador(a) da equipe: ");
      
            eq[i].codigo=ent.nextInt();
            eq[i].coordenador=f[eq[i].codigo].nome;
       
         System.out.printf("\n Informe o código do fotográfo(a) da equipe: ");
       
            eq[i].codigo=ent.nextInt();
            eq[i].fotografo=f[eq[i].codigo].nome;
          
         System.out.printf("\n Informe o código do estilista(a) da equipe: ");
       
            eq[i].codigo=ent.nextInt();
            eq[i].estilista=f[eq[i].codigo].nome;
              
              System.out.printf("\n Informe o código do editor(a) da equipe: ");
       
            eq[i].codigo=ent.nextInt();
            eq[i].editor=f[eq[i].codigo].nome;
            // a equipe recém criada é exibida
           System.out.printf("=====================================================");
       System.out.printf("=======================");
            System.out.printf("\n Coordenador: %s ", eq[i].coordenador);
            System.out.printf("\n Estilista: %s ", eq[i].estilista);
            System.out.printf("\n Editor: %s ", eq[i].editor);
            System.out.printf("\n Fotográfo: %s ", eq[i].fotografo);
            System.out.printf("=======================");
         i++;
         tam++;
         System.out.printf(" \n Deseja cadastrar outra equipe? 1 para Sim, 0 para Não: \n");
      x= ent.nextInt();}
      System.out.printf("\n Deseja realizar outra operação? 1 para Sim, 0 para Não: \n");
         resp=ent.nextInt();
         if(resp==1)
         {opc=Menu();}
    }
    //caso a opção escolhida seja 6, o programa abrirá o acesso as informações sobre os projetos
     if(opc==6)
      {int o,z, l;
          System.out.printf("\n Informe o código do projeto: ");
          o=ent.nextInt();
         // utilização de estruturas de repetição e condicional para encontrar as informações de determinado projeto de acordo com o código informado
          for(z=0;z<100;z++)
          {if(p[z].codprojeto==o)
              {
        System.out.printf("=====================================================");  
         System.out.printf("Modelo escolhida: %s \n", p[z].model);
         System.out.printf("Código da Equipe: %s \n", p[z].codequipe);
         l=p[z].codequipe;
         
                 System.out.printf("\n Coordenador(a): %s \n", eq[l].coordenador);
                 System.out.printf("\n Fotográfo(a): %s \n", eq[l].fotografo);
                  System.out.printf("\n Estilista: %s \n", eq[l].estilista);
                   System.out.printf("\n Editor(a): %s \n", eq[l].editor);
                   System.out.printf("=====================================================");
         
              }
              
          }
          
         System.out.printf("\n Deseja realizar outra operação? 1 para Sim, 0 para Não \n ");
         resp=ent.nextInt();
         if(resp==1)
         {opc=Menu();}
      }  
     // caso a opção escolhida seja 8, todos os funcionários da empresa e seus respectivos cargos serão exibidos
      if(opc==8)
      { 
        
    for (i=0; i<size; i++) {
        int h=i;
      System.out.printf("\n %d - %s - %s \n", i, fun.get(i), f[h+1].cargo);
    }
    System.out.printf("\n Deseja realizar outra operação? 1 para Sim, 0 para Não \n ");
         resp=ent.nextInt();
         if(resp==1)
         {opc=Menu();}
      }
    
}}}
